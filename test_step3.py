#!/usr/bin/env python3
"""–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Step 3 —É–ª—É—á—à–µ–Ω–∏–π"""

from config.settings import settings, logger
from services.browser_profiles_2025 import BROWSER_PROFILES
import sys

def test_profiles():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π"""
    logger.info("=== –¢–ï–°–¢ –ü–†–û–§–ò–õ–ï–ô 2025 ===")
    
    for i, profile in enumerate(BROWSER_PROFILES, 1):
        logger.info(f"{i}. {profile['name']}")
        logger.info(f"   UA: {profile['headers']['user-agent'][:50]}...")
        logger.info(f"   Impersonate: {profile['impersonate']}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
        if "chrome120" in str(profile.get("impersonate")):
            logger.error("   ‚ö†Ô∏è –û–®–ò–ë–ö–ê: –£—Å—Ç–∞—Ä–µ–≤—à–∏–π impersonate!")
        if "connection" in profile["headers"]:
            logger.error("   ‚ö†Ô∏è –û–®–ò–ë–ö–ê: –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ Connection!")
        if "sec-ch-ua" in profile["headers"]:
            logger.warning("   ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: sec-ch-ua –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ö–∞—Ä–¥–∫–æ–¥–Ω—ã–º")

def test_chrome_availability():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Google Chrome"""
    logger.info("\n=== –¢–ï–°–¢ CHROME ===")
    
    try:
        from playwright.sync_api import sync_playwright
        with sync_playwright() as p:
            try:
                browser = p.chromium.launch(channel="chrome", headless=False)
                browser.close()
                logger.success("‚úÖ Google Chrome –¥–æ—Å—Ç—É–ø–µ–Ω!")
            except:
                logger.warning("‚ö†Ô∏è Google Chrome –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω Chromium")
    except Exception as e:
        logger.error(f"‚ùå Playwright –æ—à–∏–±–∫–∞: {e}")

def test_curl_cffi():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ curl-cffi —Å –Ω–æ–≤—ã–º–∏ –ø—Ä–æ—Ñ–∏–ª—è–º–∏"""
    logger.info("\n=== –¢–ï–°–¢ CURL-CFFI ===")
    
    try:
        from curl_cffi import requests
        from services.browser_profiles_2025 import get_random_profile
        
        profile = get_random_profile()
        logger.info(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å: {profile['name']}")
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ –ø—Ä–æ—Å—Ç–æ–º—É —Å–∞–π—Ç—É
        response = requests.get(
            "https://httpbin.org/user-agent",
            headers=profile["headers"],
            impersonate=profile["impersonate"],
            timeout=10
        )
        
        if response.status_code == 200:
            logger.success("‚úÖ curl-cffi —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –Ω–æ–≤—ã–º–∏ –ø—Ä–æ—Ñ–∏–ª—è–º–∏!")
            logger.info(f"–û—Ç–≤–µ—Ç: {response.text[:100]}...")
        else:
            logger.warning(f"‚ö†Ô∏è curl-cffi –≤–µ—Ä–Ω—É–ª –∫–æ–¥: {response.status_code}")
            
    except Exception as e:
        logger.error(f"‚ùå curl-cffi –æ—à–∏–±–∫–∞: {e}")

def main():
    logger.info("=== AVITO PARSER STEP 3 - –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê ===\n")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ—Ñ–∏–ª–∏
    test_profiles()
    
    # –¢–µ—Å—Ç 2: Chrome
    test_chrome_availability()
    
    # –¢–µ—Å—Ç 3: curl-cffi
    test_curl_cffi()
    
    # –¢–µ—Å—Ç 4: –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    logger.info("\n=== –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò ===")
    logger.info("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Google Chrome –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç")
    logger.info("2. –ù–∞—á–Ω–∏—Ç–µ —Å USE_HEADLESS=false —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –ø—Ä–æ—Ü–µ—Å—Å")
    logger.info("3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ —á–µ—Ä–µ–∑ PREFERRED_PROFILE")
    logger.info("4. –ï—Å–ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ–∫—Å–∏")
    
    logger.info("\n=== –ì–û–¢–û–í–ù–û–°–¢–¨ –ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ ===")
    logger.info("‚úÖ Step 3 —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω!")
    logger.info("‚úÖ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ –±—Ä–∞—É–∑–µ—Ä–æ–≤ —Å–æ–∑–¥–∞–Ω—ã")
    logger.info("‚úÖ curl-cffi –æ–±–Ω–æ–≤–ª–µ–Ω")
    logger.info("‚úÖ Playwright –ø–µ—Ä–µ–ø–∏—Å–∞–Ω")
    logger.info("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
    
    logger.info("\nüöÄ –ì–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python main.py")

if __name__ == "__main__":
    main()
